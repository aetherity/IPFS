syntax = "proto3";

package ipfs.dht;

import "google/protobuf/timestamp.proto";

// Main DHT message wrapper
message DHTMessage {
  string message_id = 1;
  MessageType type = 2;
  bytes key = 3;  // Usually a multihash
  bytes record = 4;  // The actual record/value being stored/retrieved
  repeated Peer closer_peers = 5;  // List of peers closer to the key
  google.protobuf.Timestamp timestamp = 6;
  
  enum MessageType {
    UNKNOWN = 0;
    FIND_NODE = 1;
    FIND_VALUE = 2;
    PUT_VALUE = 3;
    GET_VALUE = 4;
    ADD_PROVIDER = 5;
    GET_PROVIDERS = 6;
    PING = 7;
  }
}

// Represents a peer in the DHT network
message Peer {
  bytes peer_id = 1;  // Peer's multihash identifier
  repeated string addresses = 2;  // Multiaddrs
  map<string, bytes> connection_info = 3;  // Additional connection metadata
}

// Request to find a specific node
message FindNodeRequest {
  bytes key = 1;  // Target peer ID to find
  uint32 num_closest_peers = 2;  // Number of closest peers to return
}

message FindNodeResponse {
  repeated Peer closer_peers = 1;
}

// Value storage messages
message PutValueRequest {
  bytes key = 1;
  bytes value = 2;
}

message GetValueRequest {
  bytes key = 1;
}

message GetValueResponse {
  bytes value = 1;
  repeated Peer closer_peers = 2;
} 
