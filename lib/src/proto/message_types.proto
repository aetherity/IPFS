syntax = "proto3";

package bitswap;

// Define enums for WantType and BlockPresenceType
enum WantType {
    WANT_TYPE_BLOCK = 0;   // Default value set to Block
    WANT_TYPE_HAVE = 1;
}

enum BlockPresenceType {
    BLOCK_PRESENCE_HAVE = 0;
    BLOCK_PRESENCE_DONT_HAVE = 1;
}

// Define Wantlist message
message Wantlist {
    message Entry {
        bytes block = 1;           // CID of the block
        int32 priority = 2;        // The priority (normalized), default to 1
        bool cancel = 3;           // Whether this revokes an entry
        WantType wantType = 4;     // Defaults to Block (0)
        bool sendDontHave = 5;     // Whether to receive DontHave responses
    }

    repeated Entry entries = 1;   // A list of wantlist entries
    bool full = 2;                // Whether this is the full wantlist, default to false
}

// Define Block message
message BlockMsg {
    bytes prefix = 1;  // CID prefix without the multihash digest
    bytes data = 2;    // Block data
}

// Define BlockPresence message
message BlockPresence {
    bytes cid = 1;                  // CID of the block
    BlockPresenceType type = 2;     // Presence status: Have or DontHave
}

// Define the main Bitswap Message structure
message Message {
    Wantlist wantlist = 1;                      // The wantlist associated with the message
    repeated BlockMsg payload = 3;              // Blocks being sent
    repeated BlockPresence blockPresences = 4;  // Presence status of blocks
    int32 pendingBytes = 5;                     // Optional field to indicate queued data size
}
